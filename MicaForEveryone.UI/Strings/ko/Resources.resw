<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTitle.Text" xml:space="preserve">
    <value>앱 정보</value>
  </data>
  <data name="AcrylicBackdropDescription.Text" xml:space="preserve">
    <value>아크릭은 프로그램 창에 윈도우 10 아크릭 효과를 적용합니다.</value>
  </data>
  <data name="AcrylicMenuItem.Text" xml:space="preserve">
    <value>Acrylic</value>
  </data>
  <data name="AddButton.Content" xml:space="preserve">
    <value>추가하기</value>
  </data>
  <data name="AddClassRuleContentDialog.Title" xml:space="preserve">
    <value>적용할 새로운 클래스</value>
  </data>
  <data name="AddClassRuleMenuItem.Text" xml:space="preserve">
    <value>클래스 추가</value>
  </data>
  <data name="AddProcessRuleContentDialog.Title" xml:space="preserve">
    <value>적용할 새로운 프로세스</value>
  </data>
  <data name="AddProcessRuleMenuItem.Text" xml:space="preserve">
    <value>프로세스 추가</value>
  </data>
  <data name="AddRuleAppBarButton.Label" xml:space="preserve">
    <value>추가하기</value>
  </data>
  <data name="AddRuleDialog.Title" xml:space="preserve">
    <value>추가하기</value>
  </data>
  <data name="AdvancedMenu.Text" xml:space="preserve">
    <value>구성 파일</value>
  </data>
  <data name="AppInitializationError.Title" xml:space="preserve">
    <value>앱 초기설정 중 문제가 발생했습니다.</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Mica For Everyone</value>
  </data>
  <data name="AppNameLabel.Text" xml:space="preserve">
    <value>Mica For Everyone</value>
  </data>
  <data name="BackdropDescription.Text" xml:space="preserve">
    <value>창 배경 효과 종류를 설정하세요.</value>
  </data>
  <data name="BackdropMenu.Text" xml:space="preserve">
    <value>창 배경 종류</value>
  </data>
  <data name="BackdropTypeSetting.Header" xml:space="preserve">
    <value>창 배경 종류</value>
  </data>
  <data name="BlurBehindSetting.Description" xml:space="preserve">
    <value>창들을 투명화시키고 흐리게 합니다. 비활성화 하시려면 이 모드를 꺼준 다음 효과가 적용된 창들을 다시 재시작 해주세요.</value>
  </data>
  <data name="BlurBehindSetting.Header" xml:space="preserve">
    <value>윈도우 배경 흐릿함 효과</value>
  </data>
  <data name="BrowseButton.Content" xml:space="preserve">
    <value>탐색하기</value>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="ClassNameSuggestBox.Description" xml:space="preserve">
    <value>창 클래스 이름을 입력해주세요.</value>
  </data>
  <data name="ClassNameSuggestBox.Header" xml:space="preserve">
    <value>클래스 이름:</value>
  </data>
  <data name="CloseButton.Content" xml:space="preserve">
    <value>닫기</value>
  </data>
  <data name="ConfigFileError.Content" xml:space="preserve">
    <value>구성 파일에 오류가 있습니다:
{0}

오류를 고치시고 리로드 하시려면 "구성 파일 리로드"를 누르세요.</value>
  </data>
  <data name="ConfigFileError.Header" xml:space="preserve">
    <value>구성 파일에 오류가 있습니다:</value>
  </data>
  <data name="ConfigFilePathSetting.Description" xml:space="preserve">
    <value>프로세스 리스트를 저장하고 불러올 때 사용하는 파일입니다.</value>
  </data>
  <data name="ConfigFilePathSetting.Header" xml:space="preserve">
    <value>Config 경로:</value>
  </data>
  <data name="DarkMenuItem.Text" xml:space="preserve">
    <value>다크 모드</value>
  </data>
  <data name="DarkTitlebarColorDescription.Text" xml:space="preserve">
    <value>이 항목을 선택 시 다크 모드를 사용합니다.</value>
  </data>
  <data name="DefaultBackdropDescription.Text" xml:space="preserve">
    <value>기본은 앱 배경에 아무런 영향을 주지 않습니다. </value>
  </data>
  <data name="DefaultMenuItem.Text" xml:space="preserve">
    <value>기본</value>
  </data>
  <data name="DefaultTitlebarColorDescription.Text" xml:space="preserve">
    <value>기본 옵션은 앱 배경을 바꾸지 않습니다.</value>
  </data>
  <data name="ExitMenuItem.Text" xml:space="preserve">
    <value>나가기</value>
  </data>
  <data name="ExitSetting.Header" xml:space="preserve">
    <value>나가기</value>
  </data>
  <data name="ExtendFrameIntoClientAreaSetting.Header" xml:space="preserve">
    <value>효과를 전체 앱에다가 적용시키기</value>
  </data>
  <data name="ExtendFrameIntoClientAreaSetting.Description" xml:space="preserve">
    <value>이 항목을 선택하면 앱이 설정한 배경 효과를 가지게 됩니다. 모든 앱에 적용되지 않으며 몇몇 앱은 약간 이상하게 보일 수 있습니다.  이것이 어떻게 작동하는 지 모르시면 활성화를 안하는 것을 추천합니다. 이 효과를 비활성화 시키려면 앱을 다시 껐다 켜주세요.</value>
  </data>
  <data name="GeneralPaneItem.Text" xml:space="preserve">
    <value>일반</value>
  </data>
  <data name="GeneralSetting.Header" xml:space="preserve">
    <value>일반</value>
  </data>
  <data name="GitHubButton.Content" xml:space="preserve">
    <value>GitHub</value>
  </data>
  <data name="GlobalRulePaneItem.Text" xml:space="preserve">
    <value>공통 앱 설정</value>
  </data>
  <data name="LanguageSetting.Description" xml:space="preserve">
    <value>원하는 언어를 선택하세요. 언어를 설정한 뒤 이 앱의 창을 껐다 켜주셔야지 언어가 정상적으로 적용됩니다.</value>
  </data>
  <data name="LanguageSetting.Header" xml:space="preserve">
    <value>언어</value>
  </data>
  <data name="LightMenuItem.Text" xml:space="preserve">
    <value>라이트 모드</value>
  </data>
  <data name="LightTitlebarColorDescription.Text" xml:space="preserve">
    <value>이 항목을 선택 시 라이트 모드를 사용합니다.</value>
  </data>
  <data name="MicaBackdropDescription.Text" xml:space="preserve">
    <value>Mica 효과는 모든 앱에 옆은 배경화면 색으로 배경 효과를 입힙니다.</value>
  </data>
  <data name="MicaMenuItem.Text" xml:space="preserve">
    <value>Mica</value>
  </data>
  <data name="NoneBackdropDescription.Text" xml:space="preserve">
    <value>이 항목은 열려있는 앱에도 적용됩니다.</value>
  </data>
  <data name="NoneMenuItem.Text" xml:space="preserve">
    <value>아무 효과 없음</value>
  </data>
  <data name="OkButton.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OpenInEditorMenuItem.Text" xml:space="preserve">
    <value>텍스트 편집기로 열기</value>
  </data>
  <data name="ProcessNameSuggestBox.Description" xml:space="preserve">
    <value>.exe 확장 없이 프로세스 이름을 적으세요.</value>
  </data>
  <data name="ProcessNameSuggestBox.Header" xml:space="preserve">
    <value>프로세스 이름:</value>
  </data>
  <data name="ReloadMenuItem.Text" xml:space="preserve">
    <value>리로드</value>
  </data>
  <data name="ReloadOnChangeSetting.Description" xml:space="preserve">
    <value>설정 후 바뀌면 자동으로 효과를 입힙니다.</value>
  </data>
  <data name="ReloadOnChangeSetting.Header" xml:space="preserve">
    <value>변경 시 리로드</value>
  </data>
  <data name="RemoveRuleAppBarButton.Label" xml:space="preserve">
    <value>삭제하</value>
  </data>
  <data name="SettingsMenuItem.Text" xml:space="preserve">
    <value>설정</value>
  </data>
  <data name="SettingsTitle.Text" xml:space="preserve">
    <value>설정</value>
  </data>
  <data name="StartupSetting.Description" xml:space="preserve">
    <value>이 앱을 윈도우 시작 후 실행하게 합니다.</value>
  </data>
  <data name="StartupSetting.Header" xml:space="preserve">
    <value>부팅 후 시작하기</value>
  </data>
  <data name="SystemMenuItem.Text" xml:space="preserve">
    <value>시스템</value>
  </data>
  <data name="SystemTitlebarColorDescription.Text" xml:space="preserve">
    <value>시스템은 설정되어 있는 색을 사용합니다.</value>
  </data>
  <data name="TabbedBackdropDescription.Text" xml:space="preserve">
    <value>Mica Alt(Tabbed)는 흐린 배경화면 배경 효과를 앱에다가 입힙니다.</value>
  </data>
  <data name="TabbedMenuItem.Text" xml:space="preserve">
    <value>Mica Alt(Tabbed)</value>
  </data>
  <data name="TelegramButton.Content" xml:space="preserve">
    <value>텔레그램</value>
  </data>
  <data name="TitlebarColorDescription.Text" xml:space="preserve">
    <value>윈도우 표시줄의 색 및 효과를 설정하세요.</value>
  </data>
  <data name="TitlebarColorMenu.Text" xml:space="preserve">
    <value>표시줄 색</value>
  </data>
  <data name="TitleBarColorSetting.Header" xml:space="preserve">
    <value>표시줄 색</value>
  </data>
  <data name="TrayIconTooltip.Content" xml:space="preserve">
    <value>Mica For Everyone</value>
  </data>
  <data name="TwitterButton.Content" xml:space="preserve">
    <value>트위터</value>
  </data>
  <data name="UnhandledException.Header" xml:space="preserve">
    <value>예외 발생</value>
  </data>
  <data name="UnhandledUIException.Header" xml:space="preserve">
    <value>UI 예외 발생</value>
  </data>
  <data name="UnsupportedBackdropDescription.Text" xml:space="preserve">
    <value>아크릭 효과와 Mica Alt(Tabbed) 효과는 최소 윈도우 11 22523부터 실행이 가능합니다..</value>
  </data>
  <data name="UnsupportedImmersiveDarkModeDescription.Text" xml:space="preserve">
    <value>이 다크모드는 최소한 윈도우 10 19401부터 사용 가능합니다.</value>
  </data>
  <data name="UnsupportedMicaDescription.Text" xml:space="preserve">
    <value>Mica 효과는 윈도우 11 22000부터 사용 가능합니다.</value>
  </data>
  <data name="VersionLabel.Text" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="AdvancedSetting.Header" xml:space="preserve">
    <value>자세히</value>
  </data>
  <data name="ConfigFileSetting.Header" xml:space="preserve">
    <value>구성 파일</value>
  </data>
  <data name="StyleSetting.Header" xml:space="preserve">
    <value>스타일</value>
  </data>
  <data name="OpenInEditorSetting.Description" xml:space="preserve">
    <value>구성 파일을 텍스트 편집기로 엽니다.</value>
  </data>
  <data name="OpenInEditorSetting.Header" xml:space="preserve">
    <value>텍스트 편집기로 수정하기</value>
  </data>
  <data name="ReloadSetting.Description" xml:space="preserve">
    <value>구성 파일로 부터 리로드하고 열려있는 모든 앱에 효과를 입힙니다.</value>
  </data>
  <data name="ReloadSetting.Header" xml:space="preserve">
    <value>리로드</value>
  </data>
  <data name="ResetSetting.Description" xml:space="preserve">
    <value>기본값으로 복구하고 있던 모든 항목들을 제거합니다.</value>
  </data>
  <data name="ResetSetting.Header" xml:space="preserve">
    <value>초기화</value>
  </data>
  <data name="Credit.Text" xml:space="preserve">
    <value>제작자</value>
  </data>
  <data name="IconCredit.Text" xml:space="preserve">
    <value>아이콘 제작자:</value>
  </data>
  <data name="TranslatorsCredit.Text" xml:space="preserve">
    <value>번역:</value>
  </data>
  <data name="CornerMenu.Text" xml:space="preserve">
    <value>모서리 모드</value>
  </data>
  <data name="CornerPreferenceSetting.Header" xml:space="preserve">
    <value>모서리 모드</value>
  </data>
  <data name="SquareMenuItem.Text" xml:space="preserve">
    <value>뾰족한</value>
  </data>
  <data name="RoundedMenuItem.Text" xml:space="preserve">
    <value>둥근</value>
  </data>
  <data name="RoundedSmallMenuItem.Text" xml:space="preserve">
    <value>약간 둥근</value>
  </data>
  <data name="CornerDescription.Text" xml:space="preserve">
    <value>창 모서리 모드를 설정하세요.</value>
  </data>
  <data name="DefaultCornerDescription.Text" xml:space="preserve">
    <value>기본은 현재의 앱의 창 모서리에 아무런 영향을 주지 않습니다.</value>
  </data>
  <data name="SquareCornerDescription.Text" xml:space="preserve">
    <value>뾰족한 모드는 창 모서리를 뾰족하게 만듭니다.</value>
  </data>
  <data name="RoundedCornerDescription.Text" xml:space="preserve">
    <value>둥근 모서리 모드는 모든 앱의 창 모서리를 둥글게 만듭니다.</value>
  </data>
  <data name="RoundedSmallCornerDescription.Text" xml:space="preserve">
    <value>약간 둥글게 모드는 창 모서리를 살짝 둥글게 합니다.</value>
  </data>
  <data name="AdminStartupSetting.Description" xml:space="preserve">
    <value>컴퓨터 시작 후에 이 앱을 관리자 권한으로 자동 실행합니다. 이 설정을 활성화 시키려면 이 앱을 관리자 권한으로 실행하셔야 합니다.</value>
  </data>
  <data name="AdminStartupSetting.Header" xml:space="preserve">
    <value>관리자 권한으로 실행</value>
  </data>
  <data name="ContributorsLabel.Text" xml:space="preserve">
    <value>이 앱 개발에 도와준 사람들:</value>
  </data>
  <data name="TrayIconVisibilitySetting.Description" xml:space="preserve">
    <value>알림 구역에 이 앱 아이콘 표시하기</value>
  </data>
  <data name="TrayIconVisibilitySetting.Header" xml:space="preserve">
    <value>시스템 트레이에 이 앱 아이콘 표시하기</value>
  </data>
</root>